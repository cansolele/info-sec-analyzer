import React, { useMemo } from "react";
import { ResponsivePie } from "@nivo/pie";

const riskColors = {
  Critical: "#87171a",
  High: "#cc0000",
  Medium: "#f5770f",
  Low: "#00705c",
  Unavailable: "#696969",
};

const chartConfig = {
  startAngle: 0,
  endAngle: 360,
  fit: true,
  margin: { top: 40, right: 80, bottom: 80, left: 80 },
  innerRadius: 0.5,
  padAngle: 3,
  cornerRadius: 5,
  sortByValue: true,
  activeOuterRadiusOffset: 8,
  colors: { datum: "data.color" },
  borderWidth: 2,
  borderColor: { from: "color", modifiers: [["darker", 0.2]] },
  arcLinkLabelsSkipAngle: 10,
  arcLinkLabelsTextColor: "#333",
  arcLinkLabelsStraightLength: 15,
  arcLinkLabelsDiagonalLength: 25,
  arcLinkLabelsThickness: 2,
  arcLinkLabelsTextOffset: 8,

  animate: true,
  motionStiffness: 90,
  motionDamping: 15,
  arcLabelsSkipAngle: 25,
  arcLinkLabelsColor: { from: "color" },
  legends: [
    {
      anchor: "right",
      direction: "column",
      justify: false,
      translateX: 0,
      translateY: 0,
      itemsSpacing: 8,
      itemWidth: 100,
      itemHeight: 18,
      itemTextColor: "#333",
      itemDirection: "left-to-right",
      itemOpacity: 1,
      symbolSize: 20,
      symbolShape: "circle",
      effects: [
        {
          on: "hover",
          style: {
            itemTextColor: "#000",
          },
        },
      ],
    },
  ],
};

const VulnerabilityDiagram = ({
  vulnerabilityData,
  currentLanguage,
  percent,
}) => {
  const riskLevels = {
    Critical: currentLanguage === "ENG" ? "Critical" : "Критические",
    High: currentLanguage === "ENG" ? "High" : "Высокие",
    Medium: currentLanguage === "ENG" ? "Medium" : "Средние",
    Low: currentLanguage === "ENG" ? "Low" : "Низкие",
    Unavailable: currentLanguage === "ENG" ? "Unavailable" : "Недоступные",
  };
  const chartData = useMemo(() => {
    return Object.keys(riskLevels).map((level) => ({
      id: riskLevels[level],
      label: riskLevels[level] + " (" + percent[level] + "%)",
      value: Object.values(vulnerabilityData).reduce(
        (acc, hostData) => acc + hostData[level],
        0
      ),
      color: riskColors[level],
    }));
  }, [vulnerabilityData, percent, currentLanguage]);

  return (
    <div style={{ height: "600px" }}>
      <ResponsivePie {...chartConfig} data={chartData} />
    </div>
  );
};

export default VulnerabilityDiagram;
