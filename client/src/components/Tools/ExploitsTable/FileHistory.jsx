import React, { useState, useEffect } from "react";
import {
  Box,
  Typography,
  List,
  ListItem,
  ListItemText,
  Divider,
} from "@mui/material";
import axios from "axios";
import config from "../../../config";
import style from "./FileHistory.module.css";
import FileDownloadIcon from "@mui/icons-material/FileDownload";

const FileHistory = React.memo(({ currentLanguage, socket }) => {
  const [fileHistory, setFileHistory] = useState([]);

  const fetchFileHistory = async () => {
    try {
      const response = await axios.get(`${config.apiURL}/file-history`);
      if (response.status === 200) {
        setFileHistory(response.data.reverse());
      } else {
        throw new Error(`Failed to fetch, status code: ${response.status}`);
      }
    } catch (error) {
      console.error("Error fetching file history:", error);
    }
  };

  useEffect(() => {
    fetchFileHistory();
    if (socket) {
      socket.on("reportHistoryUpdated", fetchFileHistory);
      return () => {
        socket.off("reportHistoryUpdated", fetchFileHistory);
      };
    }
  }, [socket]);

  return (
    <Box
      sx={{ bgcolor: "background.paper", boxShadow: 1, borderRadius: 2, p: 2 }}
      className={style.file_history}
    >
      <Typography sx={{ textAlign: "center", mb: 1 }} variant="h6">
        {currentLanguage === "ENG" ? "Report History" : "История отчетов"}
      </Typography>
      <List>
        {fileHistory.length > 0 ? (
          fileHistory.map((file, index) => (
            <React.Fragment key={file.timestamp}>
              <ListItem
                button
                component="a"
                href={`${config.apiURL}/download/${file.timestamp}`}
                download
              >
                <ListItemText
                  primary={
                    file.vulnerabilityScanner +
                    (currentLanguage === "ENG" ? " exploits" : " эксплоиты")
                  }
                  secondary={file.time}
                />
                <FileDownloadIcon style={{ marginLeft: "auto" }} />
              </ListItem>
              {index < fileHistory.length - 1 && <Divider />}
            </React.Fragment>
          ))
        ) : (
          <Typography sx={{ textAlign: "center" }}>
            {currentLanguage === "ENG"
              ? "No reports found"
              : "Отчеты не найдены"}
          </Typography>
        )}
      </List>
    </Box>
  );
});

export default FileHistory;
